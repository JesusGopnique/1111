


						        <<Навигация>>
1. pwd - местоположение;
2. cd - выйти в корень;
3. cd ../(../../) - выйти на уровень выше(несколько уровней выше);
4. cd folder/(folder1/folder2) - войти на уровень ниже(несколько уровней ниже);
5. ls -la (folder1) - показывает содержимое папки, в которой находишься (другой папки);

							<<Файлы и папки>>
1. cat <file.json> - просмотр содержимого созданного файла;
2. cat > <file.txt> - создание файла и его наполнение;
3. cat >> <file.json> - наполнить файл. ctrl + c - закрывает режим редактирования;
4. cat > <folder>/<file.txt> - создать файл внутри уже существующей папки не заходя в нее;
5. cat <folder>/<file.txt> - просмотреть содержимое файла из другой папки, но находящейся в рабочей директории ;
6. touch <file.xml> — Создать файл ;
7. touch app/{css/main.css,js/main.js,index.html} — Создать сразу несколько файлов, никаких лишних пробелов быть не должно;
8. vim <file.txt> - создает файл и открывает внутренний редактор. :qw - выход с сохранением изменений ; :q! - выход без сохранения;
9. start .(windows) open .(MAC, Linux) - открыть настоящую папку на UI.;
10. mv(cp) folder1/file.txt folder2/file.txt - перемещает(копирует) файл из folder1 в folder2;
11. rm <file.txt> - удаляет файл;
12. rm -r <folder1> - удаляет папку со всем ее содержимым;
13. rmdir <folder1> - удяляет пустую папку;
14. mv <file1.txt> <file2.json> - переименновывает файл;
15. mkdir <name> - создает папку;
16. cd !$ — перейти в только что созданную папку;
17. mkdir <name> <name2> <name3? — Создать сразу несколько папок;
18. mkdir -p <name>/{<name1>,<name2>} — Создать сразу несколько вложенных папок;
19. echo <line> >> <file.txt> - добавляет строку в файл;
20. git diff - покажет информации о модифицированном файле;





1. git log - показывает все коммиты q - закрыть;
2. git log --author aouthor_name - показывает все коммиты определенного автора q - закрыть;
3. git show <commit> - показывает содержиое определенного коммита;
4. git blame <file.txt> - информация о авторе строки файла;
5. git blame <file.txt> | grep <string> - информация, о том кто вносил строку в файл;
6. git blame <file.txt> | grep <author> - информация, о строках которые вносил определенный автор;
7. git reset HEAD~1 - шаг назад при коммите файлов или других статус-изменениях;








